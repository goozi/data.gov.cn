<PUBLIC:COMPONENT >

/**
 * <p>Title: Table封闭类 </p>
 * <p>Description:</p>
 * <p>Company: Kingtop</p>
 * <p>CreateDate: 2005-05-18 09:36</p>
 * @author liuxd
 * @version 1.0
 */

//=================属性=================
<PUBLIC:PROPERTY name="OddClass" />			//单行样式
<PUBLIC:PROPERTY name="EvenClass" />		//双行样式
<PUBLIC:PROPERTY name="StartRow" />			//开始行
<PUBLIC:PROPERTY name="FixRow" />			//固定行数
<PUBLIC:PROPERTY name="FixCol" />			//固定列数




//初始化事件
<PUBLIC:ATTACH event="oncontentready" HANDLER="doInit"/>


<SCRIPT language="javascript">
var rowNum=0;
var colNum=0;
var currObj;

/**
* 初始化
*/
function doInit()
{
	this.style.wordBreak="keep-all";
	this.style.tableLayout="fixed";
	rowNum=this.rows.length;
	var maxNum=rowNum;
	if (OddClass==null) OddClass="odd";
	if (EvenClass==null) EvenClass="even";
	if (StartRow==null) StartRow=1;
	if (FixRow!=null) maxNum=parseInt(FixRow)+1;

	colNum=FixCol==null?this.rows[0].cells.length:FixCol;
	
	for(var i=StartRow;i<maxNum;i++)
	{
		if (i>=rowNum)
		{
			var oTr=this.insertRow(i);
			for (j=0;j<colNum;j++)
			{
				oTr.insertCell(j);				
			}			
		}
		if ((i-StartRow)%2==0)
		{
			this.rows[i].className=OddClass;
		}
		else
		{
			this.rows[i].className=EvenClass;			
		}
	}	

	if (FixCol==null)
	{
		attachEvent("onclick", clickTbl);
	}
}

/* Liuxd 2005-05-18
*点击时进行排序
*
*/
function clickTbl()
{
	
	currObj=event.srcElement;
	if (currObj.tagName!='TD'||currObj.parentNode.rowIndex>=StartRow) return;
	
	var cellIndex=currObj.cellIndex;
	
	var aRows = [];
	var oRows = this.rows;

	for (var i=StartRow; i<rowNum; i++) 
	{  
		var obj=oRows[i];
		aRows[i-StartRow] = [oRows[i].cells[cellIndex].innerText,obj];
    }   

	for (var j=0;j<this.rows[0].cells.length;j++)
	{
		var re =/↓/i,re2=/↑/i;
		this.rows[0].cells[j].innerHTML=this.rows[0].cells[j].innerHTML.replace(re, "").replace(re2, "");
	}		

    var bDesc = ("true" == currObj.getAttribute("sort")) ? true : false;
    if (bDesc)
	{
		currObj.innerHTML=currObj.innerHTML + "↑";
		
	}
    else
	{
		currObj.innerHTML=currObj.innerHTML + "↓";		
	}

	aRows.sort(sortRows); //降序排列，按字符串内码

	currObj.setAttribute("sort", "" + !bDesc);


	
	var tempTable="<table></table>";
	tempTable=element.document.createElement(tempTable);

	for (var i=StartRow; i<rowNum; i++) 
	{
		var oTr=tempTable.insertRow(i-StartRow);
		for (j=0;j<this.rows[0].cells.length;j++)
		{
			oTr.insertCell(j);
			oTr.cells[j].innerHTML=aRows[i-StartRow][1].cells[j].innerHTML;
		}				
    }

    for (var i=StartRow; i<rowNum; i++) 
	{
		for (j=0;j<this.rows[0].cells.length;j++)
		{
			oRows[i].cells[j].innerHTML=tempTable.rows[i-StartRow].cells[j].innerHTML;
		}		
    }

}


/** 
 * 数据排序用的，判断大小
 * 
*/
function sortRows(x,y)
{
	var a = x[0];
	var b = y[0];		
	

	if(currObj.getAttribute("DataType")== "NUMBER")			//数据类型是数字
	{ 
		a=replace(a,",","");
		b=replace(b,",","");
		a = parseFloat(a);
		b = parseFloat(b);
	}
	else if  (currObj.getAttribute("DataType")=="DATE")		//数据类型是日期
	{ 
		a=replace(a,"-","/");
		b=replace(b,"-","/");		
		a = parseInt(new Date(a==""?"1700/01/01":a).getTime()/1000);
		b = parseInt(new Date(b==""?"1700/01/01":b).getTime()/1000);
		
	}
	if(a>b)
	{
		if("true" == currObj.getAttribute("sort")) return 1;
		else	return -1;
	}
	else if (a<b)
	{
		if("true" == currObj.getAttribute("sort"))	return -1;
		else	return 1;
	}
	else	return 0;
}

/* Liuxd 2005-06-10
*替换字符
*
*/
function replace(str,from,to)
{
	return str.split(from).join(to);
}
</SCRIPT>
</PUBLIC:COMPONENT>
