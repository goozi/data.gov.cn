package com.dhccity.base.entity;

import java.util.*;

import org.light.*;

/**wbtional
 * <p>Title: BASE_PARAMETER 表对应类</p>
 * <p>Description:BASE_PARAMETER</p>
 * <p>Company: dhccity</p>
 * <p>CreateDate: 2005-06-16 08:42</p>
 * @author liuxd
 * @version 1.0
 */

public class BaseParameter extends Ado
{
	private long id;	//ID
	private String name;	//名称
	private String code;	//代码
	private String value;	//值
	private String unit;	//单位
	private String type;	//类型
	private String userNames;	//有权限用户名集合
	private String userIds;		//有权限用户ID集合
	private String explain;		//说明

	public BaseParameter()
	{
	}

	public BaseParameter(long id)
	{
		this.id = id;
	}

	/**
	 * 对应字段：[ID]  类型：NUMBER(22)
	 */
	public void setId(long id)
	{
		this.id = id;
	}

	/**
	 * 对应字段：[ID]  类型：NUMBER(22)
	 */
	public long getId()
	{
		return this.id;
	}

	/**
	 * 对应字段：[名称]  类型：VARCHAR2(200)
	 */
	public void setName(String name)
	{
		this.name = name;
	}

	/**
	 * 对应字段：[名称]  类型：VARCHAR2(200)
	 */
	public String getName()
	{
		return this.name == null ? "" : this.name;
	}

	/**
	 * 对应字段：[代码]  类型：VARCHAR2(100)
	 */
	public void setCode(String code)
	{
		this.code = code;
	}

	/**
	 * 对应字段：[代码]  类型：VARCHAR2(100)
	 */
	public String getCode()
	{
		return this.code == null ? "" : this.code;
	}

	/**
	 * 对应字段：[值]  类型：VARCHAR2(1000)
	 */
	public void setValue(String value)
	{
		this.value = value;
	}

	/**
	 * 对应字段：[值]  类型：VARCHAR2(1000)
	 */
	public String getValue()
	{
		return this.value == null ? "" : this.value;
	}

	/**
	 * 对应字段：[单位]  类型：VARCHAR2(50)
	 */
	public void setUnit(String unit)
	{
		this.unit = unit;
	}

	/**
	 * 对应字段：[单位]  类型：VARCHAR2(50)
	 */
	public String getUnit()
	{
		return this.unit == null ? "" : this.unit;
	}

	/**
	 * 对应字段：[类型]  类型：VARCHAR2(100)
	 */
	public void setType(String type)
	{
		this.type = type;
	}

	/**
	 * 对应字段：[类型]  类型：VARCHAR2(100)
	 */
	public String getType()
	{
		return this.type == null ? "" : this.type;
	}

	/**
	 * 对应字段：[有权限用户名集合]  类型：VARCHAR2(4000)
	 */
	public void setUserNames(String userNames)
	{
		this.userNames = userNames;
	}

	/**
	 * 对应字段：[有权限用户名集合]  类型：VARCHAR2(4000)
	 */
	public String getUserNames()
	{
		return this.userNames == null ? "" : this.userNames;
	}

	/**
	 * 对应字段：[有权限用户ID集合]  类型：VARCHAR2(4000)
	 */
	public void setUserIds(String userIds)
	{
		this.userIds = userIds;
	}

	/**
	 * 对应字段：[有权限用户ID集合]  类型：VARCHAR2(4000)
	 */
	public String getUserIds()
	{
		return this.userIds == null ? "" : this.userIds;
	}

	/**
	 * 对应字段：[说明]  类型：VARCHAR2(1000)
	 */
	public void setExplain(String explain)
	{
		this.explain = explain;
	}

	/**
	 * 对应字段：[说明]  类型：VARCHAR2(1000)
	 */
	public String getExplain()
	{
		return this.explain == null ? "" : this.explain;
	}

	//===============================以下为自编辑代码===================================





	/**
	 * 获得用户ID拥有操作权限的参数数据列表
	 * @param  user User		用户
	 * @param currPage int   	当前页码
	 * @param pageSize int      每页行数
	 * @return List
	 */
	public List findPageByUser(User user, int currPage, int pageSize)
	{
		String hql = "from BaseParameter o where 1=1 ";
		if (!user.isProgrammer() && !user.isAdmin())
		{
			hql += " and o.userIds like '%{" + user.getId() + "}%'";
		}
		hql += "order by o.id desc";
		return this.findPage(hql, currPage, pageSize);
	}

	/**
	 * 通过Code获得参数对象
	 * @param code String		代码
	 * @return BaseParameter
	 */
	public BaseParameter findByCode(String code)
	{

		String hql = "from BaseParameter o where o.code='" + code + "'";
		return (BaseParameter)this.findObject(hql);
	}

	/**
	 * 查找符合条件的记录集
	 * @param searchField String   		搜索字段
	 * @param searchValue String    	搜索值
	 * @param  user User				用户
	 * @param currPage int   			当前页码
	 * @param pageSize int        		每页行数
	 * @return List
	 */
	public List search(String searchField, String searchValue, User user, int currPage, int pageSize)
	{
		String hql = "from BaseParameter o where " + searchField + " like '%" + searchValue + "%'";
		if (!user.isProgrammer() && !user.isAdmin())
		{
			hql += " and o.userIds like '%{" + user.getId() + "}%'";
		}
		hql += "order by o.id desc";
		return this.findPage(hql, currPage, pageSize);
	}

}
