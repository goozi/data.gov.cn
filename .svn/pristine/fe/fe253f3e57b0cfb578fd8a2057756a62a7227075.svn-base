package com.dhccity.base.entity;

import java.util.*;

import org.light.*;

/**
 * <p>Title: BASE_DEPARTMENT 表对应类</p>
 * <p>Description:BASE_DEPARTMENT</p>
 * <p>Company: dhccity</p>
 * <p>CreateDate: 2006-04-11 12:38</p>
 * @author liuxd
 * @version 1.0
 */

public class BaseDepartment extends TreeAdo implements Tree
{
	private long id; //ID
	private String name; //名称
	private int state; //状态：0表示无效、1表示有效
	private int sequ; //顺序种子
	private long parentId; //父ID号
	private long leaderId; //部门负责人
	private String code; //机构代码
	private String fullName; //部门全称
	private long mainLevel; //部门级别1
	private long subLevel; //部门级别2
	private long property; //部门属性
	private String address; //地址
	private String postCode; //邮编
	private String canton; //行政区域
	private String tel; //电话
	private String fax; //传真
	private String explain; //说明
	private String meno; //备注

	//{defaultOrder = "o.id";} //默认的排序方式

	public BaseDepartment()
	{
	}

	public BaseDepartment(long id)
	{
		this.id = id;
	}

	/**
	 * 对应字段：[ID]  类型：NUMBER(22)
	 */
	public void setId(long id)
	{
		this.id = id;
	}

	/**
	 * 对应字段：[ID]  类型：NUMBER(22)
	 */
	public long getId()
	{
		return this.id;
	}

	/**
	 * 对应字段：[名称]  类型：VARCHAR2(200)
	 */
	public void setName(String name)
	{
		this.name = name;
	}

	/**
	 * 对应字段：[名称]  类型：VARCHAR2(200)
	 */
	public String getName()
	{
		return this.name == null ? "" : this.name;
	}

	/**
	 * 对应字段：[状态：0表示无效、1表示有效]  类型：NUMBER(1)
	 */
	public void setState(int state)
	{
		this.state = state;
	}

	/**
	 * 对应字段：[状态：0表示无效、1表示有效]  类型：NUMBER(1)
	 */
	public int getState()
	{
		return this.state;
	}

	/**
	 * 对应字段：[顺序种子]  类型：NUMBER(4)
	 */
	public void setSequ(int sequ)
	{
		this.sequ = sequ;
	}

	/**
	 * 对应字段：[顺序种子]  类型：NUMBER(4)
	 */
	public int getSequ()
	{
		return this.sequ;
	}

	/**
	 * 对应字段：[父ID号]  类型：NUMBER(12)
	 */
	public void setParentId(long parentId)
	{
		this.parentId = parentId;
	}

	/**
	 * 对应字段：[父ID号]  类型：NUMBER(12)
	 */
	public long getParentId()
	{
		return this.parentId;
	}

	/**
	 * 对应字段：[部门负责人]  类型：NUMBER(12)
	 */
	public void setLeaderId(long leaderId)
	{
		this.leaderId = leaderId;
	}

	/**
	 * 对应字段：[部门负责人]  类型：NUMBER(12)
	 */
	public long getLeaderId()
	{
		return this.leaderId;
	}

	/**
	 * 对应字段：[机构代码]  类型：VARCHAR2(50)
	 */
	public void setCode(String code)
	{
		this.code = code;
	}

	/**
	 * 对应字段：[机构代码]  类型：VARCHAR2(50)
	 */
	public String getCode()
	{
		return this.code == null ? "" : this.code;
	}

	/**
	 * 对应字段：[部门全称]  类型：VARCHAR2(300)
	 */
	public void setFullName(String fullName)
	{
		this.fullName = fullName;
	}

	/**
	 * 对应字段：[部门全称]  类型：VARCHAR2(300)
	 */
	public String getFullName()
	{
		return this.fullName == null ? "" : this.fullName;
	}

	/**
	 * 对应字段：[部门级别1]  类型：NUMBER(12)
	 */
	public void setMainLevel(long mainLevel)
	{
		this.mainLevel = mainLevel;
	}

	/**
	 * 对应字段：[部门级别1]  类型：NUMBER(12)
	 */
	public long getMainLevel()
	{
		return this.mainLevel;
	}

	/**
	 * 对应字段：[部门级别2]  类型：NUMBER(12)
	 */
	public void setSubLevel(long subLevel)
	{
		this.subLevel = subLevel;
	}

	/**
	 * 对应字段：[部门级别2]  类型：NUMBER(12)
	 */
	public long getSubLevel()
	{
		return this.subLevel;
	}

	/**
	 * 对应字段：[部门属性]  类型：NUMBER(12)
	 */
	public void setProperty(long property)
	{
		this.property = property;
	}

	/**
	 * 对应字段：[部门属性]  类型：NUMBER(12)
	 */
	public long getProperty()
	{
		return this.property;
	}

	/**
	 * 对应字段：[地址]  类型：VARCHAR2(250)
	 */
	public void setAddress(String address)
	{
		this.address = address;
	}

	/**
	 * 对应字段：[地址]  类型：VARCHAR2(250)
	 */
	public String getAddress()
	{
		return this.address == null ? "" : this.address;
	}

	/**
	 * 对应字段：[邮编]  类型：VARCHAR2(6)
	 */
	public void setPostCode(String postCode)
	{
		this.postCode = postCode;
	}

	/**
	 * 对应字段：[邮编]  类型：VARCHAR2(6)
	 */
	public String getPostCode()
	{
		return this.postCode == null ? "" : this.postCode;
	}

	/**
	 * 对应字段：[行政区域]  类型：VARCHAR2(50)
	 */
	public void setCanton(String canton)
	{
		this.canton = canton;
	}

	/**
	 * 对应字段：[行政区域]  类型：VARCHAR2(50)
	 */
	public String getCanton()
	{
		return this.canton == null ? "" : this.canton;
	}

	/**
	 * 对应字段：[电话]  类型：VARCHAR2(50)
	 */
	public void setTel(String tel)
	{
		this.tel = tel;
	}

	/**
	 * 对应字段：[电话]  类型：VARCHAR2(50)
	 */
	public String getTel()
	{
		return this.tel == null ? "" : this.tel;
	}

	/**
	 * 对应字段：[传真]  类型：VARCHAR2(50)
	 */
	public void setFax(String fax)
	{
		this.fax = fax;
	}

	/**
	 * 对应字段：[传真]  类型：VARCHAR2(50)
	 */
	public String getFax()
	{
		return this.fax == null ? "" : this.fax;
	}

	/**
	 * 对应字段：[说明]  类型：VARCHAR2(1000)
	 */
	public void setExplain(String explain)
	{
		this.explain = explain;
	}

	/**
	 * 对应字段：[说明]  类型：VARCHAR2(1000)
	 */
	public String getExplain()
	{
		return this.explain == null ? "" : this.explain;
	}

	/**
	 * 对应字段：[备注,表示图标文件名称]  类型：VARCHAR2(1000)
	 */
	public void setMeno(String meno)
	{
		this.meno = meno;
	}

	/**
	 * 对应字段：[备注,表示图标文件名称]  类型：VARCHAR2(1000)
	 */
	public String getMeno()
	{
		return this.meno == null ? "" : this.meno;
	}

	//===============================以下为自编辑代码===================================

	/**
	 * 获取节点值
	 * @return String
	 */
	public String getValue()
	{
		return this.name;
	}

	/**
	 * 获得领导名称
	 * @return String
	 */
	public String getLeaderName()
	{
		BaseUser baseUser = (BaseUser)new BaseUser().findById(this.leaderId);
		return baseUser == null ? "" : baseUser.getName();
	}

	/**
	 * 获得上级部门名称
	 * @return String
	 */
	public String getParentName()
	{
		BaseDepartment baseDepartment = (BaseDepartment)new BaseDepartment().findById(this.parentId);
		return baseDepartment == null ? "" : baseDepartment.getName();
	}

	/**
	 * 通过递归方式--加载子节点，实现TreeAdo虚函数
	 * @param parentId long		父ID
	 * @param state int			-1为所有、0为无效的、1为有效的
	 * @param level int			级数
	 */
	protected void loadChildNode(long parentId, int state, int level)
	{
		String hql = "from BaseDepartment o where o.parentId=" + parentId;
		if (state == 0 || state == 1)
		{
			hql += " and o.state=" + state;
		}
		hql += " order by o.sequ desc";
		List list = this.findAll(hql);
		Iterator it = list.iterator();
		if (list.size() > 0 && currIndex != -1)
		{
			( (BaseDepartment) treeVector.get(currIndex)).isLeaf = false;
		}
		while (it.hasNext())
		{
			BaseDepartment baseDepartment = (BaseDepartment) it.next();
			baseDepartment.setLevel(level);
			baseDepartment.isLeaf = true;
			treeVector.add(baseDepartment);
			currIndex++;
			loadChildNode(baseDepartment.getId(), state, level + 1); //递归
		}
	}

}
